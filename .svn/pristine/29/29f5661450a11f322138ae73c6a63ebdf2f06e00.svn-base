//判斷是新增還是編輯狀態
var TPRFlagObj = {
	AddOrEdit:""
		}

function getRightNowDate(){
	var date = moment().format('YYYYMMDD');
	var year = (date.substr(0,4))-1911;
	var month = (date.substr(4,2));
	var day = (date.substr(6,2));
//	console.log(year+"/"+month+"/"+day);
	
	return year+"/"+month+"/"+day;
}

function getRightNowTime(){
	var time = moment().format('HH:mm');
	return time;
}

$(document).ready(function(){
	
	
	

    var tprTotalWidth = $(".tabs").width(); 
    
    var PatientInfoBarHeight = $(".PatientInfoBar").height();
    var pageTabSwitchHeight = $("#ul-pageTabSwitch").height();
    
    var TPRRecordListGridHeight = userHeight - (PatientInfoBarHeight+pageTabSwitchHeight+100);
    resizePanelBody("TPRChartContainer",TPRRecordListGridHeight);
    resizePanelBody("TChartContainer",TPRRecordListGridHeight);
    resizePanelBody("PChartContainer",TPRRecordListGridHeight);
    resizePanelBody("RChartContainer",TPRRecordListGridHeight);
    resizePanelBody("BPChartContainer",TPRRecordListGridHeight);
    resizePanelBody("WeightChartContainer",TPRRecordListGridHeight);
    resizePanelBody("IOChartContainer",TPRRecordListGridHeight);
    
//    var tprEachLiWidth = (tprTotalWidth/9)+0.7;
//    var tprEachLiWidth = (100/9);

//    $("#ul-TPRTabSwitch > li").css('min-width', eachLiWidth +'px').css('max-width', eachLiWidth +'px');
    $("#ul-TPRTabSwitch > li").css('width', '11%');
    
	
	
	// 預設顯示第一個 Tab
	var showTab = 8;
	var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
	$(defaultLi.find('a').attr('href')).siblings().hide();
    
	// 當 li 頁籤被點擊時...
	// 若要改成滑鼠移到 li 頁籤就切換時, 把 click 改成 mouseover
	$('#ul-TPRTabSwitch > li').click(function() {
				
		// 找出 li 中的超連結 href(#id)
		var $this = $(this),
			clickTab = $this.find('a').attr('href');
		// 把目前點擊到的 li 頁籤加上 .active
		// 並把兄弟元素中有 .active 的都移除 class
		
		if(clickTab=="#Add"){
//			console.log("RightNowDate:"+getRightNowDate());
//			console.log("RightNOwTime:"+getRightNowTime());
			TPRFlagObj.AddOrEdit = "Add";	
			$("#AddTPRHead").html("新增 TPR 生命徵象紀錄單");
			$(".tprTabs").hide();
			clearAllTPRInputData(getRightNowDate(),getRightNowTime());
			var AddTPRBodyHeight =  userHeight - (PatientInfoBarHeight+pageTabSwitchHeight+60); 
			resizePanelBody("AddTPRPanel",AddTPRBodyHeight);
		}else{
			$(".tprTabs").show();
		}
		$this.addClass('active').siblings('.active').removeClass('active');
		// 淡入相對應的內容並隱藏兄弟元素
		$(clickTab).stop(false, true).fadeIn().siblings().hide();
 
		return false;
	}).find('a').focus(function(){
		this.blur();
	});
	
	
    var tabContainerHeight = userHeight - (PatientInfoBarHeight+pageTabSwitchHeight+20);
	$(".tab_container").css('min-height', tabContainerHeight +'px').css('max-height', tabContainerHeight +'px');
	
	renderTPR();
//	$("#common_chartNo").html(PatInfoObj.chartNo+"/"+PatInfoObj.ptName+"/"+PatInfoObj.sex);
//	$("#common_ckinDate").html((PatInfoObj.ckinDate)+" ~ "+(PatInfoObj.dischargeDate));
//	$("#common_zone").html(PatInfoObj.zone);
		
	//取消 
	$(document).on('click', '#btnCancel', function(event) {
		$(".tprTabs").show();
		showTab = 8;
		var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
		$(defaultLi.find('a').attr('href')).siblings().hide();
		$("#TPRRecord").show();
		
		});	
	
	//送出
	$(document).on('click', '#btnSend', function(event) {
		
		if(TPRFlagObj.AddOrEdit=="Add"){ //新增紀錄
			console.log("btnSend:"+TPRFlagObj.AddOrEdit);
			ajax_insertTPRRecord("TPRRecordMADService");
		}else{
			console.log("btnSend:"+TPRFlagObj.AddOrEdit);
			ajax_updateTPRRecord("TPRRecordMADService");
		}
		
		
		
	});	
	
	//點下新增頁籤
	/**$(document).on('click', '#li-Add', function(event) {
		
		TPRFlagObj.AddOrEdit = "Add";
		
	});**/
	
	
	
	

});

function renderTPR(){
	ajax_getTPRRecordList("TPRRecordService");
	ajax_getTPRAllLineChartData("TPRRecordService");
}




function clearAllTPRInputData(assess_date,assess_time){
	
	$("#editRecordDate").val(assess_date);
	$("#editRecordTime").val(assess_time);	    	
	$("#editTemp").val("");
	$("#editPulse").val("");	    	
	$("#editResp").val("");	    	
	$("#editWeight").val("");
	$("#editSP").val("");
  	$("#editDP").val("");
  	$("#editHeight").val("");
  	$("#editIFluids").val("");      	
  	$("#editBleed").val("");
  	$("#editDraL").val("");	      	
  	$("#editDraR").val("");	      	
  	$("#editAFluid").val("");	      	
  	$("#editUrine").val("");
  	$("#editStool").val("");
}

function TPRRecordListInputObj(empNo,sessionID,chartNo,serno,method){
	this.empNo = empNo;
	this.sessionID = sessionID;
	this.chartNo = chartNo;
	this.serno = serno;
	this.method = method;
};

//TPR CRU  
// insertTPRRecord
// updateTPRRecordByPrimaryKeys
function TPRCRUDInputObj(empNo,sessionID,dataParameters,method){
	this.empNo = empNo;
	this.sessionID = sessionID;
	this.dataParameters = dataParameters;
	this.method = method;
	
}

//TPR insert Parameter
function TPRInsertParameterInputObj(chart_no,serno,assess_date,assess_time,temperature,systolic_pressure,diastolic_pressure,pulse,respiration,weight
		,iv_fluids,urine,stool,bleed,amniotic_fluid,drainage_l,drainage_r,height,keyin_clerk){                                                     
	this.chart_no = chart_no;
	this.serno = serno;
	this.assess_date = assess_date;
	this.assess_time = assess_time;
	this.temperature = temperature;
	this.systolic_pressure = systolic_pressure;
	this.diastolic_pressure = diastolic_pressure;
	this.pulse = pulse;
	this.respiration =respiration;
	this.weight = weight;
	this.iv_fluids =iv_fluids;
	this.urine = urine;
	this.stool = stool;
	this.bleed = bleed;
	this.amniotic_fluid = amniotic_fluid;
	this.drainage_l = drainage_l;
	this.drainage_r = drainage_r;
	this.height = height;
	this.keyin_clerk = keyin_clerk;
	
}

//TPR update Parameter
function TPRUpdateParameterInputObj(chart_no,serno,assess_date,assess_time,temperature,systolic_pressure,diastolic_pressure,pulse,respiration,weight
		,iv_fluids,urine,stool,bleed,amniotic_fluid,drainage_l,drainage_r,height,modify_clerk){                                                     
	this.chart_no = chart_no;
	this.serno = serno;
	this.assess_date = assess_date;
	this.assess_time = assess_time;
	this.temperature = temperature;
	this.systolic_pressure = systolic_pressure;
	this.diastolic_pressure = diastolic_pressure;
	this.pulse = pulse;
	this.respiration =respiration;
	this.weight = weight;
	this.iv_fluids =iv_fluids;
	this.urine = urine;
	this.stool = stool;
	this.bleed = bleed;
	this.amniotic_fluid = amniotic_fluid;
	this.drainage_l = drainage_l;
	this.drainage_r = drainage_r;
	this.height = height;
	this.modify_clerk = modify_clerk;
	
}



//deleteTPRRecordByPrimaryKeys
function TPRDeleteParmeterInputObj(chart_no,serno,assess_date,assess_time){
	this.chart_no = chart_no;
	this.serno = serno;
	this.assess_date = assess_date;
	this.assess_time = assess_time;
	
}


/***TPR insert ajax  TPRRecordMADService ***/
function ajax_insertTPRRecord(serviceName){
	
   var assess_date= $("#editRecordDate").val();    
    assess_date = replaceAll(assess_date,"/",'');
    
	var assess_time = $("#editRecordTime").val();	
	assess_time = replaceAll(assess_time,":",'');
	
//	console.log("insert ajax: assess_date=>"+assess_date+" ;assess_time=>"+assess_time);
	
	var temperature = $("#editTemp").val() ==""?0.0 : parseFloat($("#editTemp").val());
	var systolic_pressure = $("#editSP").val()==""?0 : parseInt($("#editSP").val());
	var diastolic_pressure = $("#editDP").val()==""?0 : parseInt($("#editDP").val());
	var pulse = $("#editPulse").val()==""?0 : parseInt($("#editPulse").val());
	var respiration = $("#editResp").val()==""?0:parseInt($("#editResp").val());
	var weight = $("#editWeight").val()==""?0.0:parseFloat($("#editWeight").val());
	var iv_fluids = $("#editIFluids").val()==""?0:parseInt($("#editIFluids").val());
	var urine = $("#editUrine").val()==""?0:parseInt($("#editUrine").val());
	var stool = $("#editStool").val();
	var bleed = $("#editBleed").val()==""?0:parseInt($("#editBleed").val());
	var amniotic_fluid = $("#editAFluid").val()==""?0:parseInt($("#editAFluid").val());
	var drainage_l = $("#editDraL").val()==""?0:parseInt($("#editDraL").val());
	var drainage_r = $("#editDraR").val()==""?0:parseInt($("#editDraR").val());
	var height = $("#editHeight").val()==""?0.0:parseFloat($("#editHeight").val());
	var keyin_clerk = PatInfoObj.empNo;
	

	var dataParameters = new TPRInsertParameterInputObj(parseInt(PatInfoObj.chartNo),parseInt(PatInfoObj.serno),assess_date,assess_time,temperature,systolic_pressure,diastolic_pressure,pulse,respiration,weight
			,iv_fluids,urine,stool,bleed,amniotic_fluid,drainage_l,drainage_r,height,keyin_clerk);
	
	var insertTPRParm = new TPRCRUDInputObj(PatInfoObj.empNo,parseInt(PatInfoObj.sessionID),dataParameters,"insertTPRRecord");
	console.log(JSON.stringify(insertTPRParm));
	$.when(ajax_Post(serviceName,JSON.stringify(insertTPRParm))).done(
			function(dataInp) {
	
					if (dataInp.status == "Success") {
						
                       ajax_getTPRRecordList("TPRRecordService");
						
						$(".tprTabs").show();
						showTab = 8;
						var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
						$(defaultLi.find('a').attr('href')).siblings().hide();
						$("#TPRRecord").show();
						
					} else {
						var ajaxErrMsg = dataInp.errorMessage;
						alert(" 新增失敗 "+ajaxErrMsg);
					}

					
				
			
			});
	
}

function replaceAll(str, find, replace) {
    return str.replace(new RegExp(find, 'g'), replace);
}


/***TPR update ajax  TPRRecordMADService ***/
function ajax_updateTPRRecord(serviceName){
	
    var assess_date= $("#editRecordDate").val();
    
    assess_date = replaceAll(assess_date,"/",'');
    
	var assess_time = $("#editRecordTime").val();
	
	assess_time = replaceAll(assess_time,":",'');
	
//	console.log("update ajax: assess_date=>"+assess_date+" ;assess_time=>"+assess_time);
	
	var temperature = $("#editTemp").val() ==""?0.0 : parseFloat($("#editTemp").val());
	var systolic_pressure = $("#editSP").val()==""?0 : parseInt($("#editSP").val());
	var diastolic_pressure = $("#editDP").val()==""?0 : parseInt($("#editDP").val());
	var pulse = $("#editPulse").val()==""?0 : parseInt($("#editPulse").val());
	var respiration = $("#editResp").val()==""?0:parseInt($("#editResp").val());
	var weight = $("#editWeight").val()==""?0.0:parseFloat($("#editWeight").val());
	var iv_fluids = $("#editIFluids").val()==""?0:parseInt($("#editIFluids").val());
	var urine = $("#editUrine").val()==""?0:parseInt($("#editUrine").val());
	var stool = $("#editStool").val();
	var bleed = $("#editBleed").val()==""?0:parseInt($("#editBleed").val());
	var amniotic_fluid = $("#editAFluid").val()==""?0:parseInt($("#editAFluid").val());
	var drainage_l = $("#editDraL").val()==""?0:parseInt($("#editDraL").val());
	var drainage_r = $("#editDraR").val()==""?0:parseInt($("#editDraR").val());
	var height = $("#editHeight").val()==""?0.0:parseFloat($("#editHeight").val());
	var modify_clerk = PatInfoObj.empNo;
	

	var dataParameters = new TPRUpdateParameterInputObj(parseInt(PatInfoObj.chartNo),parseInt(PatInfoObj.serno),assess_date,assess_time,temperature,systolic_pressure,diastolic_pressure,pulse,respiration,weight
			,iv_fluids,urine,stool,bleed,amniotic_fluid,drainage_l,drainage_r,height,modify_clerk);
	
	var updateTPRParm = new TPRCRUDInputObj(PatInfoObj.empNo,parseInt(PatInfoObj.sessionID),dataParameters,"updateTPRRecordByPrimaryKeys");
	console.log(JSON.stringify(updateTPRParm));
	$.when(ajax_Post(serviceName,JSON.stringify(updateTPRParm))).done(
			function(dataInp) {
	
					if (dataInp.status == "Success") {
						
//						console.log("TPR Update:"+dataInp.status);
						ajax_getTPRRecordList("TPRRecordService");
						
						$(".tprTabs").show();
						showTab = 8;
						var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
						$(defaultLi.find('a').attr('href')).siblings().hide();
						$("#TPRRecord").show();
						
						
						
					} else {
						var ajaxErrMsg = dataInp.errorMessage;
						alert(" 修改失敗 "+ajaxErrMsg);
					}

					
				
			
			});
	
}

//刪除TPR
/***TPR update ajax  TPRRecordMADService ***/
function ajax_deleteTPRRecord(serviceName,assess_date,assess_time){
	

	var dataParameters = new TPRDeleteParmeterInputObj(parseInt(PatInfoObj.chartNo),parseInt(PatInfoObj.serno),assess_date,assess_time);
	
	var deleteTPRParm = new TPRCRUDInputObj(PatInfoObj.empNo,parseInt(PatInfoObj.sessionID),dataParameters,"deleteTPRRecordByPrimaryKeys");
	console.log(JSON.stringify(deleteTPRParm));
	$.when(ajax_Post(serviceName,JSON.stringify(deleteTPRParm))).done(
			function(dataInp) {
	
					if (dataInp.status == "Success") {
						
						console.log("Delete TPR:"+dataInp.status);
						
						ajax_getTPRRecordList("TPRRecordService");
												
//						$(".tprTabs").show();
//						showTab = 8;
//						var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
//						$(defaultLi.find('a').attr('href')).siblings().hide();		
//						$("#TPRRecord").show();
						
					} else {
						var ajaxErrMsg = dataInp.errorMessage;
						alert(ajaxErrMsg);
						console.log("Delete TPR:"+dataInp.status);
					}

					
				
			
			});
	
}





//{"empNo":"ORCL","sessionID":1,"chartNo":158689,"serno":133162,"method":"getTPRRecordByChartNoSerno"} TPRRecordService
function ajax_getTPRRecordList(serviceName){
	

	var TPRListParam = new TPRRecordListInputObj(PatInfoObj.empNo,PatInfoObj.sessionID,PatInfoObj.chartNo,PatInfoObj.serno,"getTPRRecordByChartNoSerno");
	
	$.when(ajax_Post(serviceName,JSON.stringify(TPRListParam))).done(
			function(dataInp) {
			 var TPRRecordArray =[];
					if (dataInp.status == "Success") {
						$.each(dataInp.resultSet, function(index, obj) {
							TPRRecordArray.push(obj);
						});
					} else {
						var ajaxErrMsg = dataInp.errorMessage;
						clearGridData("TPRRecordList");
						jqGrid_TPRRecordList("#TPRRecordList","#TPRRecordList_Pager",TPRRecordArray);	
					}

					jqGrid_TPRRecordList("#TPRRecordList","#TPRRecordList_Pager",TPRRecordArray);	
				
			
			});
	
}

/***編輯 **/
function editTPRBtn(keyin_clerk){
//	console.log("keyin_clerk:"+keyin_clerk);
	if(keyin_clerk!==PatInfoObj.empNo){
		
		alert("您並非 "+PatInfoObj.empNo+" 輸入者， 無修改權限");
	}else{
		TPRFlagObj.AddOrEdit = "Edit";	
		$(".tprTabs").hide();
		showTab = 0;
		var defaultLi = $('#ul-TPRTabSwitch > li').eq(showTab).addClass('active');
		$(defaultLi.find('a').attr('href')).siblings().hide();
		$("#AddTPRHead").html("編輯 TPR 生命徵象紀錄單");
		$("#Add").show();
	}
	
	
}
//{"empNo":"ORCL","sessionID":1,"dataParameters":{"chart_no":158689,"serno":133162,"assess_date":"1070515","assess_time":"1615"},"method":"deleteTPRRecordByPrimaryKeys"}
function deleteTPRBtn(keyin_clerk,assess_date,assess_time){
	
//	console.log("delete_clerk:"+keyin_clerk);
	if(keyin_clerk!==PatInfoObj.empNo){
		
		alert("您並非 "+PatInfoObj.empNo+" 輸入者， 無刪除權限");
	}else{		

		$('#showTprDelDate').html(assess_date);
		$('#showTprDelTime').html(assess_time);
		 
		$("#deleteTPRDiv").dialog({
           closeOnEscape: true,
		   title:"刪除 TPR 生命徵象紀錄單",
		   height: 230,
		   width:400,
		   modal: true,           
           draggable: true,
           resizable: true,
		   buttons:[
		   { 'id':'dialogBtnDelTPR',
			 'text':"確定",
			 'class': 'btn btn-primary btn-OK',
			 'click':function(){
				 assess_date = replaceAll(assess_date,"/",'');
    			 assess_time = replaceAll(assess_time,":",'');
          	     ajax_deleteTPRRecord("TPRRecordMADService",assess_date,assess_time); 
                 $(this).dialog("close");
			 },
			 'style':'overflow: hidden;'
			   
		   },
		   { 'id':'dialogBtnCancelTPR',
				 'text':"取消",
				 'class': 'btn btn-primary',
				 'click':function(){
	                 $(this).dialog("close");
				 },
				 'style':'overflow: hidden;'
				   
			   }
			   ]
          
    });
		
//		$('#Modal_DeleteTPR').modal('show');
//
//		 $('#Modal_DeleteTPR').on('show.bs.modal', function (event) { //彈跳視窗 跳出時
//			 $('#showTprDelDate').html(assess_date);
//			 $('#showTprDelTime').html(assess_time);
//
//			});
//		 
//		 $('#dialog_btnDeleteTPR').click(function(){
//			 assess_date = replaceAll(assess_date,"/",'');
//			 assess_time = replaceAll(assess_time,":",'');
//			 ajax_deleteTPRRecord("TPRRecordMADService",assess_date,assess_time); 
//		 });
		 
	
		console.log("Delete Go");
		
		
		
	}
	
}


function jqGrid_TPRRecordList(tableName,pagerName,dataArray){	//門診住院出院
//	 var navbar = $(".navbar").height(); 
	 var TPRRecordListGridHeight = userHeight - (PatientInfoBarHeight+pageTabSwitchHeight+55+100);
//	 $(".jqGridPatList_BgStyle").css('min-height', (PatListGridHeight+120) +'px').css('max-height', (PatListGridHeight+120) +'px')
//		 .css('min-width', (userWidth-25) +'px').css('max-width', (userWidth-25) +'px');
	
	$(tableName).jqGrid({
	    datatype: "local",
	    height: TPRRecordListGridHeight,
	    colModel: [
	        { label: '日期', name: 'assess_date', width: 100,align:'center',formatter: formatDateTime},
	        { label: '時間', name: 'assess_time', width: 90,align:'center',formatter: formatDateTime},
	        { label: '體溫<br/>(°C)', name: '', width: 55,align:'center',formatter:function(cellvalue, options, rowobject){
	    		
	    		if(rowobject.temperature>37.5){
	    			return "<span class='text-danger'>"+rowobject.temperature + "</span>";	
	    		}else if(rowobject.temperature==0.0){
	    			return "<span style='opacity:0;'>"+rowobject.temperature + "</span>";	
	    		}else {
	    			return "<span class='text-dark'>"+rowobject.temperature + "</span>";	
	    		}
	    	}},
	        { label: '脈搏<br/>(次/分)', name: '', width: 76,align:'center',formatter:function(cellvalue, options, rowobject){
	    		
	    		if(rowobject.pulse>100){
	    			return "<span class='text-danger'>"+rowobject.pulse + "</span>";	
	    		}else if(rowobject.pulse==0){
	    			return "<span style='opacity:0;'>"+rowobject.pulse + "</span>";	
	    		}else {
	    			return "<span class='text-dark'>"+rowobject.pulse + "</span>";	
	    		}
	    	}},
	        { label: '呼吸<br/>(次/分)', name: '', width: 76,align:'center',formatter:function(cellvalue, options, rowobject){
	    		
	    		if(rowobject.respiration==0){
	    			return "<span style='opacity:0;'>"+rowobject.respiration + "</span>";
	    		}else {
	    			return "<span class='text-dark'>"+rowobject.respiration + "</span>";	
	    		}
	    	}},
	        { label: '血壓(mmHg)<br/>收縮/舒張壓', name: '', width: 115,align:'center',formatter: function(cellvalue, options, rowobject){
	        	var SP = filterNull(rowobject.systolic_pressure)==0?"":filterNull(rowobject.systolic_pressure);
	        	var DP = filterNull(rowobject.diastolic_pressure)==0?"":filterNull(rowobject.diastolic_pressure);
	            return '<span class="EMRLabel">'+SP+" / "+DP+'</span>';	        	
	        	        } },
	        { label: '身高<br/>(cm)', name: '', width: 75,align:'center',formatter:function(cellvalue, options, rowobject){	    		
	    		if(rowobject.height==0.0){
	    			return "<span style='opacity:0;'>"+rowobject.height + "</span>";
	    		}else {
	    			return "<span class='text-dark'>"+rowobject.height + "</span>";	
	    		}
	    	}},
	        { label: '體重<br/>(kg)', name: '', width: 75,align:'left',formatter:function(cellvalue, options, rowobject){	    		
	    		if(rowobject.weight==0.0){
	    			return "<span style='opacity:0;'>"+rowobject.weight + "</span>";
	    		}else {
	    			return "<span class='text-dark'>"+rowobject.weight + "</span>";	
	    		}
	    	}},	     
	        { label: '注射量<br/>(cc)', name: 'iv_fluids', width: 80,align:'center'},
	        { label: '出血量<br/>(cc)', name: 'bleed', width: 80,align:'center'},
	        { label: 'Urine<br/>尿(cc)', name: 'urine', width: 80,align:'center'},
	        { label: '引流(左/右)<br/>(cc)', name: '', width: 130,align:'center',formatter: function(cellvalue, options, rowobject){
	            return '<span class="EMRLabel">'+filterNull(rowobject.drainage_l)+" / "+filterNull(rowobject.drainage_r)+'</span>';	        	
	        }},	        
	        { label: '羊水量<br/>(cc)', name: 'amniotic_fluid', width: 80,align:'center'},
	        { label: 'Stool大便<br>(次)', name: 'stool', width: 150,align:'center',hidden:false},
	        { label: '編', name: 'keyin_clerk', width: 45,align:'left',hidden:false,formatter: function(cellvalue, options, rowobject){
	            return '<img src="/TanTimaServices/css/img/modify_36.png" onclick="editTPRBtn('+"\'"+rowobject.keyin_clerk+"\'"+');" class="toolbar-img-style modify-tpr alt="修改" title="修改"/>';	     
	        }},//編輯button
	        { label: '刪', name: 'keyin_clerk', width: 45,align:'center',hidden:false,formatter: function(cellvalue, options, rowobject){
	        	if(rowobject.keyin_clerk!==PatInfoObj.empNo){
	        		return '<img src="/TanTimaServices/css/img/delete_36.png" onclick="deleteTPRBtn('+"\'"+rowobject.keyin_clerk+"\',"+"\'"+rowobject.assess_date+"\',"+"\'"+rowobject.assess_time+"\'"+');" class="toolbar-img-style delete-tpr alt="刪除" title="刪除"/>';
	        	}else{
	        		 return '<img src="/TanTimaServices/css/img/delete_36.png"  onclick="deleteTPRBtn('+"\'"+rowobject.keyin_clerk+"\',"+"\'"+rowobject.assess_date+"\',"+"\'"+rowobject.assess_time+"\'"+');" class="toolbar-img-style delete-tpr alt="刪除" title="刪除"/>';
//	        		 return '<img src="/TanTimaServices/css/img/delete_36.png" data-toggle="modal" data-target="#Modal_DeleteTPR" onclick="deleteTPRBtn('+"\'"+rowobject.keyin_clerk+"\',"+"\'"+rowobject.assess_date+"\',"+"\'"+rowobject.assess_time+"\'"+');" class="toolbar-img-style delete-tpr alt="刪除" title="刪除"/>';
	        	}
	           	     
	        }},//delete button
	        
	        { label: 'chart_no', name: 'chart_no', width: 150,align:'center',hidden:true},
	        { label: 'serno', name: 'serno', width: 150,align:'center',hidden:true},
	        { label: 'keyin_clerk', name: 'keyin_clerk', width: 150,align:'center',hidden:true},//輸入者
	        { label: 'keyin_clerk_name', name: 'keyin_clerk_name', width: 150,align:'center',hidden:true},//輸入者
	        { label: 'modify_clerk', name: 'modify_clerk', width: 150,align:'center',hidden:true},//編輯者
	        { label: 'modify_clerk_name', name: 'modify_clerk_name', width: 150,align:'center',hidden:true},//編輯者
	        { label: '收縮壓', name: 'systolic_pressure', width: 115,align:'center',hidden:true },
	        { label: '舒張壓', name: 'diastolic_pressure', width: 115,align:'center',hidden:true },
	        { label: '引流左', name: 'drainage_l', width: 115,align:'center',hidden:true },
	        { label: '引流右', name: 'drainage_r', width: 115,align:'center',hidden:true },
	        
	        { label: 'pulse', name: 'pulse', width: 115,align:'center',hidden:true },
	        { label: 'temperature', name: 'temperature', width: 115,align:'center',hidden:true },
	        { label: 'respiration', name: 'respiration', width: 115,align:'center',hidden:true },
	        
	        { label: 'weight', name: 'weight', width: 115,align:'center',hidden:true },
	        { label: 'height', name: 'height', width: 115,align:'center',hidden:true },
	        

	        

	    ],
	    viewrecords: true, // show the current page, data rang and total records on the toolbar

	    scrollOffset: 0,
//	    rowNum: Math.floor(PatListGridHeight/30),	
//	    rowNum:0,
//	    rowNum : dataArray.length,
	    gridComplete: function () {

	    	
     },
	    //rowList: [10, 20, 30],
	    onSelectRow:getSelectedRow,
	    /**ondblClickRow: function(rowId) {
	   

	    	var grid = $(tableName);
		    var rowKey = grid.jqGrid('getGridParam',"selrow");
		    if(rowKey){
	
		    }
	    	
       },  **/      
	    width: null,
	    shrinkToFit: false,
//	    sortable: true,
//		pager: pagerName
	});		
//	$(tableName).jqGrid('filterToolbar', { stringResult: true, searchOnEnter: false, defaultSearch: "cn" ,clearSearch: false});
	$(tableName).jqGrid('clearGridData');
	$(tableName).jqGrid('setGridParam', {data: dataArray});
	$(tableName).setGridParam({rowNum:dataArray.length});
	$(tableName).trigger('reloadGrid');
	
	
function getSelectedRow() {
		
	    var grid = $(tableName);
	    var rowKey = grid.jqGrid('getGridParam',"selrow");
	    if (rowKey){
	    	
	    	var rwoData = grid.jqGrid("getRowData",rowKey); //取得某列的 所有物件
	    	
	    	var assess_date = rwoData.assess_date;	    	
	    	var assess_time = rwoData.assess_time;
	    	var temperature = rwoData.temperature; 
	    	var systolic_pressure = rwoData.systolic_pressure; 
	    	var diastolic_pressure = rwoData.diastolic_pressure;  
	    	var pulse = rwoData.pulse; 
	    	var respiration = rwoData.respiration;  
	    	var weight = rwoData.weight;
	    	var height = rwoData.height;
	    	var iv_fluids = rwoData.iv_fluids;
	    	var urine = rwoData.urine; 
	    	var stool = rwoData.stool; 
	    	var bleed = rwoData.bleed; 
	    	var amniotic_fluid = rwoData.amniotic_fluid; 
	    	var drainage_l = rwoData.drainage_l; 
	    	var drainage_r = rwoData.drainage_r; 
	    	
	    	

	    	$("#editRecordDate").val(assess_date);
	    	$("#editRecordTime").val(assess_time);	    	
	    	$("#editTemp").val(temperature);
	    	$("#editPulse").val(pulse);	    	
	    	$("#editResp").val(respiration);	    	
	    	$("#editWeight").val(weight);
	    	$("#editSP").val(systolic_pressure);
	      	$("#editDP").val(diastolic_pressure);
	      	$("#editHeight").val(height);
	      	$("#editIFluids").val(iv_fluids);      	
	      	$("#editBleed").val(bleed);
	      	$("#editDraL").val(drainage_l);	      	
	      	$("#editDraR").val(drainage_r);	      	
	      	$("#editAFluid").val(amniotic_fluid);	      	
	      	$("#editUrine").val(urine);
	      	$("#editStool").val(stool);
	    	
	    	
	    
	    }
	    
}
	    
	

}
//{"empNo":"ORCL","sessionID":1,"chartNo":158689,"serno":133162,"method":"getTPRRecordByChartNoSerno"} TPRRecordService
//TPR 趨勢圖 1070522
// ajax_getTPRAllLineChartData("TPRRecordService");
function ajax_getTPRAllLineChartData(serviceName){
	$("#TPRChartContainer").html('');
	$("#TPRChartContainer").append('<canvas id="TPRLineChart" style="display:none;"></canvas>');
	var ctx = document.getElementById('TPRLineChart').getContext('2d');
	var LineChartJsonlObj =[];
	var arrayListOBJ=[];
	var TPRChartListParam = new TPRRecordListInputObj(PatInfoObj.empNo,PatInfoObj.sessionID,PatInfoObj.chartNo,PatInfoObj.serno,"getTPRRecordByChartNoSerno");

	var request = $.when(ajax_Post(serviceName,JSON.stringify(TPRChartListParam))).done(
	function(data) {
		if (data.status == "Success") {

			$("#TPRLineChart").show();
			
			
			 $.each(data.resultSet, function(index, obj) {
				 LineChartJsonlObj.push(obj);
				 
			                   });
			 
			 var XDataTime = renderRecordDateColName(LineChartJsonlObj);
			 console.log(XDataTime);
			 ////
			 
			    var dataLabelArray = [];
				var dataLabelList = [];
				
				var tArray = [];
				var pArray = [];
				var rArray = [];
				var tprArray=[];
				
				for(var i=0;i<LineChartJsonlObj.length;i++){
					
					tArray.push(LineChartJsonlObj[i].temperature==0?null:LineChartJsonlObj[i].temperature);
					pArray.push(LineChartJsonlObj[i].pulse==0?null:LineChartJsonlObj[i].pulse);
					rArray.push(LineChartJsonlObj[i].respiration==0?null:LineChartJsonlObj[i].respiration);
					
				     
				}
				var dataT = new dataLabel(tArray);
				var dataP = new dataLabel(pArray);
				var dataR = new dataLabel(rArray);
				tprArray.push(dataT);
				tprArray.push(dataP);
				tprArray.push(dataR);
				
//				console.log(tprArray);
				
//			          console.log("dataLabelList=>"+JSON.stringify(dataLabelList)); 
			          
			          var tprLabel = ["體溫","脈搏","呼吸"];
			          var tprColor = ["#2259CA","#F13967","#292929"]
			          for(var k=0;k<tprArray.length;k++){
			      		//dataList.push(((25+i)*2)-4);
			      		//var emp = new datasets("Label_"+i,dataList[i].dataLabel,getRandomColor());
			      		var emp = new datasets(tprLabel[k],tprArray[k].dataLabel,tprColor[k]);
			      		arrayListOBJ.push(emp);
//			      		console.log("arrayListOBJ:"+arrayListOBJ);
			      	}
//			          console.log("arrayListOBJ:"+arrayListOBJ);
			 
				var config = {
						 //是否顯示動畫
		                animation:true,
		                //動畫分多少步完成
		                animationSteps:200,
					    // The type of chart we want to create
					    type: 'line',
					    responsive: true,
					    pointDot: true,
		                pointDotRadius: 12,
		                pointDotStrokeWidth: 4,

					    data: {
					    	//X軸檢驗日期
					    	labels: XDataTime,
					        datasets: arrayListOBJ,
					    },

					    // Configuration options go here
					    options: {
					     spanGaps: true,//不斷線 1070411
					      elements:{
					       line:{
					        tension:0,
					        fill: false,
					        pointStyle: 'circle',
					       }	  
					      },
					      tooltips:{
					        mode:'point',
					        borderWidth:100,
					        titleFontSize:16,
					        titleSpacing:10,
					        backgroundColor:'black',
					        titleFontColor:'#fff',
					        bodyFontSize:16,
					        bodySpacing:2
					      },
					      title:{
					        display:false,
					        text:"檢驗趨勢圖",
					        position:'top',
					        fontSize: 20,
					      },
					      layout:{
					        padding:{
					        	left:20,
					        	right:20,
					        	top:20,
					        	bottom:10
					        }	  
					      },
					      scales: {
				              xAxes: [{
				                      display: true,
				                      scaleLabel: {
				                          display: true,
				                          labelString: '檢驗日期',
				                          position:'right',
				                          fontSize: 16,
				                      }
				                  }],
				              yAxes: [{
				                      display: true,
				                      ticks: {
				                          beginAtZero: true,
//				                          steps: 10, 
//				                          stepValue: 5,
				                          fontSize: 16,
				                          //max: 1000  //最大值
				                      }
				                  }]
				          },
//				          plotOptions: { series: { connectNulls: true } }, //1070411 add 預防斷線
					      legend:{
					      position:'bottom',
					      padding:{
					        	left:10,
					        	right:10,
					        	top:10,
					        	bottom:10
					        },
					      labels:{
					       boxWidth:8,
//					       fontColor:'black',
					       fontSize: 16,	   
					       //fontColor:'rbg(60,180,100)'
					      }
					      	  
					      }
					    	
					    
					    }
					}
			 
			 
			////
				
				try{
					var chart = new Chart(ctx,config);
				}catch(e){
//					console.log(e);
				}

			
			

		} else {
			var ajaxErrMsg = data.errorMessage;

			
		}	
								

	});

request.onreadystatechange = null;
request.abort = null;
request = null; 

	
};

function renderRecordDateColName(arrayData){
	var colModel = [];

	for(var j=0;j<arrayData.length;j++){
		var date = arrayData[j].assess_date;
		var time = arrayData[j].assess_time;
		
		colModel.push(date+" "+time);
	}

	return colModel;
	
}




